// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendingMachine.Model.DAL;

namespace VendingMachine.Migrations
{
    [DbContext(typeof(DbVendingMachineContext))]
    partial class DbVendingMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VendingMachine.Model.DAL.BeverageStore", b =>
                {
                    b.Property<int>("BeverageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BeverageTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BeverageTypeId");

                    b.HasIndex("BeverageTypeId1");

                    b.ToTable("BeverageStores");
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.BeverageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<byte>("Image")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BeverageTypes");
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.CoinType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Nominal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CoinTypes");
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.CoinTypeSettings", b =>
                {
                    b.Property<int>("CoinTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<int>("CoinTypeId1")
                        .HasColumnType("int");

                    b.HasKey("CoinTypeId");

                    b.HasIndex("CoinTypeId1");

                    b.ToTable("CoinTypeSettings");
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.CoinVault", b =>
                {
                    b.Property<int>("CoinTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoinTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("CoinTypeId");

                    b.HasIndex("CoinTypeId1");

                    b.ToTable("CoinVaults");
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.BeverageStore", b =>
                {
                    b.HasOne("VendingMachine.Model.DAL.BeverageType", "BeverageType")
                        .WithMany()
                        .HasForeignKey("BeverageTypeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.CoinTypeSettings", b =>
                {
                    b.HasOne("VendingMachine.Model.DAL.CoinType", "CoinType")
                        .WithMany()
                        .HasForeignKey("CoinTypeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VendingMachine.Model.DAL.CoinVault", b =>
                {
                    b.HasOne("VendingMachine.Model.DAL.CoinType", "CoinType")
                        .WithMany()
                        .HasForeignKey("CoinTypeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
